6/11
	uart用法：
	1. 確認pl2303 driver為2008版
	2. 再MCC加入uart1，勾選enable uart和printf to uart，其他不用動
	3. 開data visualizer，把terminal source改成com，就可以收到訊號
	
	目前什麼功能都沒有，讀取速率就只剩1700hz了
	主clock如果period選0x1F3F，純跑讀取鍵盤的話可以跑到5000hz
	
	adc還沒測好
	
7/26
	i2c測試
	read用他的sample code改就好，不過不知道起始和結束位置，可能會掛掉
	
	write有兩步驟：
	收到write時會先跑一次I2C1_SLAVE_RECEIVE_REQUEST_DETECTED，抓好記憶體位置以後才開始抓資料
	之後會依據master read幾個byte，就跑幾次I2C1_SLAVE_RECEIVED_DATA_DETECTED，去把資料都載下來
	
7/29
	timer1的pr設為0x31F，clock為8Mhz，計算下來每一個tick會是0.0001秒
	
	adc不會跑是因為要把conversion clock設到256，acquisition time設到16
	
	流程：
	ADC1_Enable();
    ADC1_ChannelSelect(channel_AN14);
	while(1){
		ADC1_SoftwareTriggerEnable();
        for(int i=0;i <1000;i++);
        ADC1_SoftwareTriggerDisable();
        
        while(!ADC1_IsConversionComplete(channel_AN14));
        uint16_t a2 = ADC1_ConversionResultGet(channel_AN14);
	}
	
8/18
	adc enable之後要停一段時間，然後再disable，也要停一段時間，才能夠get result，不然取到的值會被其他次影響
	
8/22
	二進位最快切換法：
	0000	0
	0001	1
	0010	7
	0011	2
	0100	5
	0101	4
	0110	6
	0111	3	
	1000	11
	1001	10
	1010	8
	1011	9
	
	雙數最快切換法
	0000	0
	0001	
	0010	3
	0011	
	0100	1
	0101	
	0110	2
	0111	
	1000	5
	1001	
	1010	4
	1011	
	
	
	read panel和i2c同時跑的狀況下，每秒可以掃1000次
	i2c讀一讀會當掉，要看一下為什麼
	
9/24
	i2c write pi和read input都改好了，勝spi pwm speed i2c read pi
	adc設定要設16TCY 4us 2TAD，output integer 32bit
	
	不知道為什麼process adc程式寫3個state循環，analog 9就會在最低的時候突然爆很高的數字。改成兩個state循環就不會了
	disable到下次enable之前，也要留時間間隔。
	
	adc換算是先把反指數函數 a*ln(b*x)=y ，x為0~100，y為0~925，代入(x=1,y=0)和(x=100,y=925)，最後可以算出a=200.86119788025397028864712499893，b=1
	如果要求x時，x=exp(y/200.86119788025397028864712499893)
	
9/25
	遊戲中轉速度旋鈕，會很不穩定，但是用uart debug卻沒有問題
	